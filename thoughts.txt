A Workout consists of Exercises

An Exercise consists of a 
- name
- notes
  - rep range
  - working weight
  - technique
- Sets

A Set consists of a
- set number
- weight done
- reps completed
- type ("WORKING", "WARMUP", "DROPSET", "FAILED")
- status ("COMPLETED", "IN PROGRESS")

Initialize newly picked exercise with one set with empty
weight and reps.
Set number starts with one and increments every time 
'Add Set' is pressed.
Type and status are initialized with values 'WORKING'
and 'IN PROGRESS' until the user possibly changes them.

Instead of having multiple components for headerTimer 
I should just render one from app and then manage what 
is shown from that one component and create more 
under that component as needed.


When to insert/modify data in database:
- When user starts a new blank workout or routine
- When a user creates/deletes a routine
- When a user adds/deletes an exerciseInstance
- When a user creates/deletes an exercise
- When a user changes the status of a set
- When the user ends/cancels a workout
- When a user looks at their workout history
- When a user looks at the history of an exercise

Need to add screens for these first

run on iphone simulator on mac: 
xcode > xcode tab > simulator
run expo start + i

only save an exercise and its data when at least one
set has its status changed to completed

when workout started generate workoutId and start stopwatch
need to put stopwatch somewhere

if user tries to end workout under a minute after the workout
was started or if workout has no exercises or if no completed sets
then cancel workout don't save

how to save entered data and active workout when 
app crashes/is killed/is in background?

need to set up notifications for set timer

when to save data? on change?

use context or just sql updates?

what if user unchecks the one set they completed?
need to track number of sets completed in workout

need to stop header timer when workout is ended

can't play sounds in background, going to have to use notifications
when app is in background when timer goes off

can't get custom sound to play for local notification only default

maybe try ejecting to react native app but then can't use
expo to publish to app store?

don't worry about notifications for now, worry about saving workout data

for a workout you can only update the name and duration, so do 
these at same time with one function

why update duration?
just set endTime at end with DATETIMENOW
then when need duration after workout is over
subtract start time from end time

no more checking workout duration when ending workout
doesn't make sense just go off completed sets

need to create exercise instance for each exercise in routine
if doing routine workout 
or if adding an exercise mid workout

only insert exercise instance if the set is completed?

NEED TO UPDATE EVERYTHING WHEN COMPLETED SET IS DELETED

should workout order be managed in active workout?
can't rely on number in routine if not using routine
or if user doesn't want to add that exercise to routine


just get size of routine when we are adding a new exercise

add exercise, change exercise order, and delete exercise actions
are done when action is done now and not when back button is pressed
in routine modal

when exercise is added the routine's current size is fetched and
incremented and the exercise is inserted into routineExerciseBridge

when order is changed every routineExercise numberInRoutine
is updated with the index of its position in the updated state
array passed from routineModal

when an exercise is deleted the exercise's current position is fetched,
then routineExerciseBrides are updated so that each routineExerciseBridge
with a numberInRoutine larger than the deleted exercise's current position
is decremented by one, then the exercise is deleted

need to handle adding deleting updating for exerciseInstances and sets

when to create exercise instance?
when set completed or when workout started if there is exercise
or when exercise is added

what if exercise is deleted or no sets are completed

start with empty workout?

need to maintain workoutInstance array in activeworkoutscreen in state?
would include exerciseInstanceId (exerciseName + workoutId), 
sets completed, and exercise position number in routine

workoutInstance should just use exerciseName and workoutId as primary key

adding exerciseInstances done for exerciseStateList
 
 start on set insertion?
 each exercise should start with one set in in progresss status

 primary key for sets will be made up of the set number, exerciseName,
 and workoutId

 need to test set insertion is working
 
should split db file into db folder with init, insert, update, and delete
files

does sets need setNumber to be part of key? setNumber is not unique value
and when would we ever need to fetch a specific set?

exercises added each get initial set now
need to implement adding updating and deleting sets

to pull all past workout info first get most recent workout
ordered by endTime
use workoutId from that to get exerciseInstances ordered by
numberInWorkout
then you can get sets for each exerciseInstance

for getting past workouts use endTime column to determine
if workout is in progress or not
return where endTime is not null

on pastworkoutitem just show workout name, exercises, and date
in detailed screen show time and duration as well

instead of using sqlite date time functionality use
native js functions to store multiple versions of time and date

store just short time

don't store end time just duration

store short and full date

store duration with useStopwatch

need to also store regular timestamp to use for ordering workouts

need to fix keyboard not being dimissed only dismissed in flatlist
only problem when flatlist doesnt take up whole screen

need to insert set when new set added
need to update set numbers for sets after set deleted and
need to delete set from db

unique constraint failing for sets because if u have more than 
one set the keys are same

working now ?

test deleting sets more (test first set and last set)

need to delete the set first than fix order otherwise there are
2 duplicate set rows

updating exercise order in routine was fine when an exercise was
deleted because numberInRoutine is not part of exerciseInstances
key

deleting set first was not problem
problem is in map the current set setnumber will be the same as the 

problem with logic when deleting first 

solution: delete all sets in exerciseInstance and reinsert with
array in exercise state

what happens when all sets deleted from exercise?

need to delete sets that werent completed

need to fix numSets and numSets completed logic
with set deletion and adding

increase num sets when added in
routine, exercise, or add set button
decrease num sets when set is deleted or exercise is deleted

increase numSetsCompleted when completed button pressed
decrease numSetsCompleted when completed button pressed again
or completed set deleted or exercise with completed sets deleted

everything implemented except deleted exercises part

todo:
add exercise options screen
make exercises in current workout movable
add place calculator in bottom tab
add notes section to each exercise

should add workout completed alert

to do with exercise instances:
if routine, save new order and deleted/added exercises?
save exerciseInstance order in workout
add delete exercise and update order 
add exercise option screen

need to delete exerciseInstances in Active workout when workout is ended as well
ones that don't have completed sets
problem was workout with id would get deleted when workout was canceled
but exerInstance with same id would not so in next workout when same exercise
picked unique constraint failed

not using exerciseStateList anywhere why did we make?

swap bottom tabs navigator to material bottom tabs

medal-outline ionicon for records

use modal component for exercise options like delete, rest timer
and modal stack screen for exercise info?

have Exercise component render exerOptionsModal then call callback
function to delete exercise from state array and db

when an exercise is to be deleted need to deduct sets and completed sets
from numSets and numSetsCompleted and delete those sets from db
and
need to update numberInWorkout    

for now don't ask user to update routine

need to delete all sets from deleted exercise
should keep track of nums sets and num completed sets
in exercise component in state

need to delete all exerciseInstances from workout
like with sets b4 updating numberInWorkouts like with deleting
sets?

NEED TO FIX EXERCISE STATE ARRAYS
NEED TO CLEARLY DIFFERENTIATE BETWEEN ARRAY OF 
EXERCISE OBJECTS AND ARRAY OF EXERCISE INSTANCE OBJECTS

right now using exercise obj array for exerything but just
using name

need to maintain exerciseInstance array as well and pass to exercise
and exercise options modal

using exerList right now for draggable flatlist but should
be using other list because order is not getting updated in exerInstList

going to need exercise obj list eventually for rest time and exercise notes

INSTEAD of using two state arrays for each kind of object,
use ONE array where each element is an object containing a nested
Exercise object and an ExerciseInstance object:
{
  exer: {
   name,
   restTime,
   notes 
  },
  exerInst: {
    name,
    workoutId,
    numSetsCompleted,
    numberInWorkout
  }
}
 
maybe above not good idea
does Exercise list need to know the order of exercises in workout??

do we need to store numberInWorkout as prop in ExerciseInstance
or should we just use index of array used in draggable flatlist + 1?

should numberInWorkout be updated every time an exercise is moved or
deleted or when workout is ended?

lets just set every exerciseInstance's numberInWorkout when workout is done
also makes deleting easier cuz dont have to worry ab updating order


if you want to pass both Exercise and ExerciseInstance objs to 
Exercise component than both need to be in array for flatlist

MAIN STATE LIST NEEDS TO BE AN ARRAY LIKE BEFORE
SO YOU CAN PASS EACH OBJECT TO EXERCISE COMPONENT

updating workout order after order changed by dragging item
not updating workout order after updating because it doesn't matter
indexes of ExerAndInstList array will update automatically and thats
what we're using for numberInWorkout

getting error because exercises in db have "3:00" for rest time instead
of timeInMin

now newly inserted exercises should be fine

restime cant be 0

TODO:
3 screens in exerciseInfo
history tab
records tab
settings tab

DON'T REFRESH BEFORE ENDING/Canceling WORKOUT

"need to add create exercise screen to make exercise
free weight, machine, body weight, etc"

refactor db functions to use joins

uppercase letters take up space than undercase
need to test textinputs with capital words
use maxwidth and numberOfLines prop 

should user be able to delete a workout?
not yet

what is involved in implementing records for an exercise?

3 records for each exercise
highest set weight
highest set reps
highest set volume

"need to add way to delete exercises need exercises screen
what is involved in deleting an exercise?
delete from routine 
have to update order of routine but function for that is 
already there
wont show up in exercise list so dont have to worry about
active workout 
should still show up in past workouts "


TODO:
-should put every db function in try catch
-implement notifications for rest timer
-refactor reused logic and components
-put all colors in colors file
-remove unused imports, organize imports
-remove debug screen
-upload to appstore connect so you can use on
test flight on phone to see if any bugs
-fix profile screen
-make hardcoded strings constants
-make alerts into banner alerts

what goes into changing name of exercise:
-need to check new name doesn't already exist 
in db
-need to update name in exerInstArray

hide exercise or change exercise name

pass function from activeworkoutscreen to
ExerciseItemInActiveWorkout to app to
ExerciseSettingsTabScreen

make new boolean column in exercise 
shouldShowAsOption so user can 
hide this exercise from being shown
as option when picking exercise

hiding exercise more complicated because
need way to unhide exercise need exercises tab
need search bar...
exercises sorted alphabetically